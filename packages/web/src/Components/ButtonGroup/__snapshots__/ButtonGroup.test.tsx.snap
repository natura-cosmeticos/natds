// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ButtonGroup component when size is large should match snapshot 1`] = `
<div
  className="MuiButtonGroup-root"
  role="group"
>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined MuiButton-outlinedSizeLarge MuiButton-sizeLarge"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      One
    </span>
  </button>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined MuiButton-outlinedSizeLarge MuiButton-sizeLarge"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      Two
    </span>
  </button>
</div>
`;

exports[`ButtonGroup component when size is medium should match snapshot 1`] = `
<div
  className="MuiButtonGroup-root"
  role="group"
>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      One
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      Two
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>
</div>
`;

exports[`ButtonGroup component when size is small should match snapshot 1`] = `
<div
  className="MuiButtonGroup-root"
  role="group"
>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined MuiButton-outlinedSizeSmall MuiButton-sizeSmall"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      One
    </span>
  </button>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined MuiButton-outlinedSizeSmall MuiButton-sizeSmall"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      Two
    </span>
  </button>
</div>
`;

exports[`ButtonGroup component when variant is contained should match snapshot 1`] = `
<div
  className="MuiButtonGroup-root MuiButtonGroup-contained"
  role="group"
>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-contained MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContained"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      One
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-contained MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContained"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      Two
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>
</div>
`;

exports[`ButtonGroup component when variant is outlined should match snapshot 1`] = `
<div
  className="MuiButtonGroup-root"
  role="group"
>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      One
    </span>
  </button>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      Two
    </span>
  </button>
</div>
`;

exports[`ButtonGroup component when variant is text should match snapshot 1`] = `
<div
  className="MuiButtonGroup-root"
  role="group"
>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-text MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedText MuiButtonGroup-groupedTextHorizontal MuiButtonGroup-groupedText"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      One
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>
  <button
    className="MuiButtonBase-root MuiButton-root NatDSButton-root-1 MuiButton-text MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedText MuiButtonGroup-groupedTextHorizontal MuiButtonGroup-groupedText"
    disabled={false}
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "textTransform": undefined,
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label NatDSButton-label-2"
    >
      Two
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>
</div>
`;
