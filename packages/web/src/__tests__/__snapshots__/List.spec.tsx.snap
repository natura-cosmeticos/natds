// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List components rendering variants should match to snapshot - empty list: List empty snapshot 1`] = `
<WithTheme(ForwardRef)>
  <ForwardRef>
    <WithStyles(ForwardRef(List))>
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
      >
        <ul
          className="MuiList-root MuiList-padding"
        />
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </ForwardRef>
</WithTheme(ForwardRef)>
`;

exports[`List components rendering variants should match to snapshot - with ListItem button: List with ListItem button snapshot 1`] = `
<WithTheme(ForwardRef)>
  <ForwardRef>
    <WithStyles(ForwardRef(List))>
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
      >
        <ul
          className="MuiList-root MuiList-padding"
        >
          <WithStyles(ForwardRef(ListItem))
            button={true}
          >
            <ForwardRef(ListItem)
              button={true}
              classes={
                Object {
                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                  "button": "MuiListItem-button",
                  "container": "MuiListItem-container",
                  "dense": "MuiListItem-dense",
                  "disabled": "Mui-disabled",
                  "divider": "MuiListItem-divider",
                  "focusVisible": "Mui-focusVisible",
                  "gutters": "MuiListItem-gutters",
                  "root": "MuiListItem-root",
                  "secondaryAction": "MuiListItem-secondaryAction",
                  "selected": "Mui-selected",
                }
              }
            >
              <WithStyles(ForwardRef(ButtonBase))
                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                component="div"
                disabled={false}
                focusVisibleClassName="Mui-focusVisible"
              >
                <ForwardRef(ButtonBase)
                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  component="div"
                  disabled={false}
                  focusVisibleClassName="Mui-focusVisible"
                >
                  <div
                    aria-disabled={false}
                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    role="button"
                    tabIndex={0}
                  >
                    Test
                    <NoSsr>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </NoSsr>
                  </div>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(ListItem)>
          </WithStyles(ForwardRef(ListItem))>
        </ul>
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </ForwardRef>
</WithTheme(ForwardRef)>
`;

exports[`List components rendering variants should match to snapshot - with ListItem: List with ListItem snapshot 1`] = `
<WithTheme(ForwardRef)>
  <ForwardRef>
    <WithStyles(ForwardRef(List))>
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
      >
        <ul
          className="MuiList-root MuiList-padding"
        >
          <WithStyles(ForwardRef(ListItem))>
            <ForwardRef(ListItem)
              classes={
                Object {
                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                  "button": "MuiListItem-button",
                  "container": "MuiListItem-container",
                  "dense": "MuiListItem-dense",
                  "disabled": "Mui-disabled",
                  "divider": "MuiListItem-divider",
                  "focusVisible": "Mui-focusVisible",
                  "gutters": "MuiListItem-gutters",
                  "root": "MuiListItem-root",
                  "secondaryAction": "MuiListItem-secondaryAction",
                  "selected": "Mui-selected",
                }
              }
            >
              <li
                className="MuiListItem-root MuiListItem-gutters"
                disabled={false}
              >
                Test
              </li>
            </ForwardRef(ListItem)>
          </WithStyles(ForwardRef(ListItem))>
        </ul>
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </ForwardRef>
</WithTheme(ForwardRef)>
`;

exports[`List components rendering variants should match to snapshot - with ListItemAvatar: List with ListItemAvatar snapshot 1`] = `
<WithTheme(ForwardRef)>
  <ForwardRef>
    <WithStyles(ForwardRef(List))>
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
      >
        <ul
          className="MuiList-root MuiList-padding"
        >
          <WithStyles(ForwardRef(ListItem))>
            <ForwardRef(ListItem)
              classes={
                Object {
                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                  "button": "MuiListItem-button",
                  "container": "MuiListItem-container",
                  "dense": "MuiListItem-dense",
                  "disabled": "Mui-disabled",
                  "divider": "MuiListItem-divider",
                  "focusVisible": "Mui-focusVisible",
                  "gutters": "MuiListItem-gutters",
                  "root": "MuiListItem-root",
                  "secondaryAction": "MuiListItem-secondaryAction",
                  "selected": "Mui-selected",
                }
              }
            >
              <li
                className="MuiListItem-root MuiListItem-gutters"
                disabled={false}
              >
                <WithTheme(Component)
                  key=".0"
                >
                  <Component>
                    <WithStyles(ForwardRef(ListItemAvatar))>
                      <ForwardRef(ListItemAvatar)
                        classes={
                          Object {
                            "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                            "root": "MuiListItemAvatar-root",
                          }
                        }
                      >
                        <div
                          className="MuiListItemAvatar-root"
                        >
                          <WithTheme(ForwardRef)
                            color="default"
                            size="small"
                          >
                            <ForwardRef
                              color="default"
                              size="small"
                            >
                              <WithStyles(ForwardRef(Avatar))
                                color="default"
                                size="small"
                                style={Object {}}
                              >
                                <ForwardRef(Avatar)
                                  classes={
                                    Object {
                                      "circle": "MuiAvatar-circle",
                                      "colorDefault": "MuiAvatar-colorDefault",
                                      "fallback": "MuiAvatar-fallback",
                                      "img": "MuiAvatar-img",
                                      "root": "MuiAvatar-root",
                                      "rounded": "MuiAvatar-rounded",
                                      "square": "MuiAvatar-square",
                                    }
                                  }
                                  color="default"
                                  size="small"
                                  style={Object {}}
                                >
                                  <div
                                    className="MuiAvatar-root MuiAvatar-circle MuiAvatar-colorDefault"
                                    color="default"
                                    size="small"
                                    style={Object {}}
                                  >
                                    <WithTheme(ForwardRef)
                                      name="outlined-navigation-close"
                                      size="tiny"
                                    >
                                      <ForwardRef
                                        name="outlined-navigation-close"
                                        size="tiny"
                                      >
                                        <styled.i
                                          className="natds-icons natds-icons-outlined-navigation-close undefined"
                                          size="tiny"
                                        >
                                          <i
                                            className="sc-AxjAm iPsTfi natds-icons natds-icons-outlined-navigation-close undefined"
                                            size="tiny"
                                          />
                                        </styled.i>
                                      </ForwardRef>
                                    </WithTheme(ForwardRef)>
                                  </div>
                                </ForwardRef(Avatar)>
                              </WithStyles(ForwardRef(Avatar))>
                            </ForwardRef>
                          </WithTheme(ForwardRef)>
                        </div>
                      </ForwardRef(ListItemAvatar)>
                    </WithStyles(ForwardRef(ListItemAvatar))>
                  </Component>
                </WithTheme(Component)>
              </li>
            </ForwardRef(ListItem)>
          </WithStyles(ForwardRef(ListItem))>
        </ul>
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </ForwardRef>
</WithTheme(ForwardRef)>
`;

exports[`List components rendering variants should match to snapshot - with ListItemIcon: List with ListItemIcon snapshot 1`] = `
<WithTheme(ForwardRef)>
  <ForwardRef>
    <WithStyles(ForwardRef(List))>
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
      >
        <ul
          className="MuiList-root MuiList-padding"
        >
          <WithStyles(ForwardRef(ListItem))>
            <ForwardRef(ListItem)
              classes={
                Object {
                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                  "button": "MuiListItem-button",
                  "container": "MuiListItem-container",
                  "dense": "MuiListItem-dense",
                  "disabled": "Mui-disabled",
                  "divider": "MuiListItem-divider",
                  "focusVisible": "Mui-focusVisible",
                  "gutters": "MuiListItem-gutters",
                  "root": "MuiListItem-root",
                  "secondaryAction": "MuiListItem-secondaryAction",
                  "selected": "Mui-selected",
                }
              }
            >
              <li
                className="MuiListItem-root MuiListItem-gutters"
                disabled={false}
              >
                <WithTheme(ForwardRef)
                  key=".0"
                >
                  <ForwardRef>
                    <WithStyles(ForwardRef(ListItemIcon))>
                      <ForwardRef(ListItemIcon)
                        classes={
                          Object {
                            "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                            "root": "MuiListItemIcon-root",
                          }
                        }
                      >
                        <div
                          className="MuiListItemIcon-root"
                        >
                          <WithTheme(ForwardRef)
                            name="outlined-navigation-close"
                            size="small"
                          >
                            <ForwardRef
                              name="outlined-navigation-close"
                              size="small"
                            >
                              <styled.i
                                className="natds-icons natds-icons-outlined-navigation-close undefined"
                                size="small"
                              >
                                <i
                                  className="sc-AxjAm iPsTfi natds-icons natds-icons-outlined-navigation-close undefined"
                                  size="small"
                                />
                              </styled.i>
                            </ForwardRef>
                          </WithTheme(ForwardRef)>
                        </div>
                      </ForwardRef(ListItemIcon)>
                    </WithStyles(ForwardRef(ListItemIcon))>
                  </ForwardRef>
                </WithTheme(ForwardRef)>
              </li>
            </ForwardRef(ListItem)>
          </WithStyles(ForwardRef(ListItem))>
        </ul>
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </ForwardRef>
</WithTheme(ForwardRef)>
`;

exports[`List components rendering variants should match to snapshot - with ListItemSecondaryAction: List with ListItemSecondaryAction snapshot 1`] = `
<WithTheme(ForwardRef)>
  <ForwardRef>
    <WithStyles(ForwardRef(List))>
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
      >
        <ul
          className="MuiList-root MuiList-padding"
        >
          <WithStyles(ForwardRef(ListItem))>
            <ForwardRef(ListItem)
              classes={
                Object {
                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                  "button": "MuiListItem-button",
                  "container": "MuiListItem-container",
                  "dense": "MuiListItem-dense",
                  "disabled": "Mui-disabled",
                  "divider": "MuiListItem-divider",
                  "focusVisible": "Mui-focusVisible",
                  "gutters": "MuiListItem-gutters",
                  "root": "MuiListItem-root",
                  "secondaryAction": "MuiListItem-secondaryAction",
                  "selected": "Mui-selected",
                }
              }
            >
              <li
                className="MuiListItem-root MuiListItem-gutters"
                disabled={false}
              >
                <WithTheme(ForwardRef)
                  key=".0"
                >
                  <ForwardRef>
                    <WithStyles(ForwardRef(ListItemSecondaryAction))>
                      <ForwardRef(ListItemSecondaryAction)
                        classes={
                          Object {
                            "root": "MuiListItemSecondaryAction-root",
                          }
                        }
                      >
                        <div
                          className="MuiListItemSecondaryAction-root"
                        >
                          <WithTheme(ForwardRef)
                            aria-label="shopping"
                            edge="end"
                          >
                            <ForwardRef
                              aria-label="shopping"
                              edge="end"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="shopping"
                                edge="end"
                              >
                                <ForwardRef(IconButton)
                                  aria-label="shopping"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  edge="end"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="shopping"
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeEnd"
                                    disabled={false}
                                    focusRipple={true}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="shopping"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-edgeEnd"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                    >
                                      <button
                                        aria-label="shopping"
                                        className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <WithTheme(ForwardRef)
                                            name="outlined-navigation-close"
                                            size="tiny"
                                          >
                                            <ForwardRef
                                              name="outlined-navigation-close"
                                              size="tiny"
                                            >
                                              <styled.i
                                                className="natds-icons natds-icons-outlined-navigation-close undefined"
                                                size="tiny"
                                              >
                                                <i
                                                  className="sc-AxjAm iPsTfi natds-icons natds-icons-outlined-navigation-close undefined"
                                                  size="tiny"
                                                />
                                              </styled.i>
                                            </ForwardRef>
                                          </WithTheme(ForwardRef)>
                                        </span>
                                        <NoSsr>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </NoSsr>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </ForwardRef>
                          </WithTheme(ForwardRef)>
                        </div>
                      </ForwardRef(ListItemSecondaryAction)>
                    </WithStyles(ForwardRef(ListItemSecondaryAction))>
                  </ForwardRef>
                </WithTheme(ForwardRef)>
              </li>
            </ForwardRef(ListItem)>
          </WithStyles(ForwardRef(ListItem))>
        </ul>
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </ForwardRef>
</WithTheme(ForwardRef)>
`;

exports[`List components rendering variants should match to snapshot - with ListItemText: List with ListItemText snapshot 1`] = `
<WithTheme(ForwardRef)>
  <ForwardRef>
    <WithStyles(ForwardRef(List))>
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
      >
        <ul
          className="MuiList-root MuiList-padding"
        >
          <WithStyles(ForwardRef(ListItem))>
            <ForwardRef(ListItem)
              classes={
                Object {
                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                  "button": "MuiListItem-button",
                  "container": "MuiListItem-container",
                  "dense": "MuiListItem-dense",
                  "disabled": "Mui-disabled",
                  "divider": "MuiListItem-divider",
                  "focusVisible": "Mui-focusVisible",
                  "gutters": "MuiListItem-gutters",
                  "root": "MuiListItem-root",
                  "secondaryAction": "MuiListItem-secondaryAction",
                  "selected": "Mui-selected",
                }
              }
            >
              <li
                className="MuiListItem-root MuiListItem-gutters"
                disabled={false}
              >
                <WithTheme(ForwardRef)
                  key=".0"
                  primary="Text only"
                >
                  <ForwardRef
                    primary="Text only"
                  >
                    <WithStyles(ForwardRef(ListItemText))
                      primary="Text only"
                    >
                      <ForwardRef(ListItemText)
                        classes={
                          Object {
                            "dense": "MuiListItemText-dense",
                            "inset": "MuiListItemText-inset",
                            "multiline": "MuiListItemText-multiline",
                            "primary": "MuiListItemText-primary",
                            "root": "MuiListItemText-root",
                            "secondary": "MuiListItemText-secondary",
                          }
                        }
                        primary="Text only"
                      >
                        <div
                          className="MuiListItemText-root"
                        >
                          <WithStyles(ForwardRef(Typography))
                            className="MuiListItemText-primary"
                            component="span"
                            variant="body1"
                          >
                            <ForwardRef(Typography)
                              className="MuiListItemText-primary"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                              variant="body1"
                            >
                              <span
                                className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                              >
                                Text only
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </div>
                      </ForwardRef(ListItemText)>
                    </WithStyles(ForwardRef(ListItemText))>
                  </ForwardRef>
                </WithTheme(ForwardRef)>
              </li>
            </ForwardRef(ListItem)>
          </WithStyles(ForwardRef(ListItem))>
        </ul>
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </ForwardRef>
</WithTheme(ForwardRef)>
`;

exports[`List components rendering variants should match to snapshot - with ListSubheader: List with ListSubheader snapshot 1`] = `
<WithTheme(ForwardRef)
  subheader={
    <WithTheme(ForwardRef)
      id="subheader"
    >
      Subheader
    </WithTheme(ForwardRef)>
  }
>
  <ForwardRef
    subheader={
      <WithTheme(ForwardRef)
        id="subheader"
      >
        Subheader
      </WithTheme(ForwardRef)>
    }
  >
    <WithStyles(ForwardRef(List))
      subheader={
        <WithTheme(ForwardRef)
          id="subheader"
        >
          Subheader
        </WithTheme(ForwardRef)>
      }
    >
      <ForwardRef(List)
        classes={
          Object {
            "dense": "MuiList-dense",
            "padding": "MuiList-padding",
            "root": "MuiList-root",
            "subheader": "MuiList-subheader",
          }
        }
        subheader={
          <WithTheme(ForwardRef)
            id="subheader"
          >
            Subheader
          </WithTheme(ForwardRef)>
        }
      >
        <ul
          className="MuiList-root MuiList-padding MuiList-subheader"
        >
          <WithTheme(ForwardRef)
            id="subheader"
          >
            <ForwardRef
              id="subheader"
            >
              <WithStyles(ForwardRef(ListSubheader))
                id="subheader"
              >
                <ForwardRef(ListSubheader)
                  classes={
                    Object {
                      "colorInherit": "MuiListSubheader-colorInherit",
                      "colorPrimary": "MuiListSubheader-colorPrimary",
                      "gutters": "MuiListSubheader-gutters",
                      "inset": "MuiListSubheader-inset",
                      "root": "MuiListSubheader-root",
                      "sticky": "MuiListSubheader-sticky",
                    }
                  }
                  id="subheader"
                >
                  <li
                    className="MuiListSubheader-root MuiListSubheader-sticky MuiListSubheader-gutters"
                    id="subheader"
                  >
                    Subheader
                  </li>
                </ForwardRef(ListSubheader)>
              </WithStyles(ForwardRef(ListSubheader))>
            </ForwardRef>
          </WithTheme(ForwardRef)>
        </ul>
      </ForwardRef(List)>
    </WithStyles(ForwardRef(List))>
  </ForwardRef>
</WithTheme(ForwardRef)>
`;
